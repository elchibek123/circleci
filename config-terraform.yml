version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3

jobs:
  plan-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.8.0
    steps:
      - aws-cli/setup:
          profile_name: default
          role_arn: ${MAIN_AWS_ROLE_ARN}
      - checkout
      - run:
          name: terraform init & plan
          command: |
            cd Main
            terraform init -input=false
            terraform fmt
            terraform validate
            terraform plan
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.8.0
    steps:
      - aws-cli/setup:
          profile_name: default
          role_arn: ${MAIN_AWS_ROLE_ARN}
      - attach_workspace:
          at: .
      - run:
          name: terraform apply
          command: |
            cd Main
            terraform apply -auto-approve
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.8.0
    steps:
      - aws-cli/setup:
          profile_name: default
          role_arn: ${MAIN_AWS_ROLE_ARN}
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.8.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve
workflows:
  plan_approve_apply:
    jobs:
      - plan-apply:
          context: terraform
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          context: terraform
          requires:
            - hold-apply
      - plan-destroy:
          context: terraform
          requires:
            - apply
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          context: terraform
          requires:
            - hold-destroy